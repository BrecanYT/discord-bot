"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
/** The core 'arg' class which others must inherit from and implement. */
class BaseArg {
    constructor(...[name]) {
        utils_1.assert(!!name, `Arg name ${name} not provided`);
        utils_1.assert(name.length >= 3, `Arg name ${name} should be 3+ characters`);
        this.name = name;
    }
    /** Parses as string for the next argument and returns the parsed value and remaining text. */
    parse(_) {
        throw Error(`${this.name} 'parse()' function not implemented`);
    }
    /** Returns the help syntax seen by end users via the help flag and in errors. */
    help() {
        throw Error(`${this.name} 'help()' function not implemented`);
    }
    /** Returns an example of this argument as seen by end users via the help flag. */
    example() {
        throw Error(`${this.name} 'example()' function not implemented`);
    }
    validateArg() {
        utils_1.assert(this.help().length > 0, 'Help message should be populated');
        utils_1.assert(this.example().length > 0, 'Example message should be populated');
        const [value, error] = this.parse(this.example());
        utils_1.assert(!error, 'Parsing the example should not return errors');
        utils_1.assert(utils_1.isPopulated(value), 'Parsing the example should return a value');
    }
    /** (Optional) Validate the position of the arg. This should throw an error upon failure. */
    validateIndex(..._) { }
}
exports.default = BaseArg;
